%% fit_and_plot_one_curve.m
%  Fitting one curve, plotting itself and it's fitting result.
%  author: hxp<hxp201406@gmail.com>
%  Version: MATLAB R2019b Linux

function bandgap=fit_and_plot_one_curve(lower_limit_1, upper_limit_1, ...
    lower_limit_2, upper_limit_2, FIT_TYPE, ...
    base_line_x_to_electron_volts_zoomed, ...
    base_line_y_zoomed, ...
    transmittance_nmin_zoomed, data_legend)
    hold on;
    plot_one_fig(base_line_x_to_electron_volts_zoomed, ...
            (log((transmittance_nmin_zoomed ./ base_line_y_zoomed).^(-1))).^2, ...
            {'0min', '10min', '20min', '30min', '40min'},...
            'Energy(eV)', '$(\alpha \hbar \omega)^2$', ...
            'Graph Needed to Solve Band Gap', ...
            'northwest');
    [fit_result_1, ~] = fit(...
        base_line_x_to_electron_volts_zoomed(lower_limit_1:upper_limit_1, 1), ...
        (log((transmittance_nmin_zoomed(lower_limit_1:upper_limit_1, 1)...
            ./ base_line_y_zoomed(lower_limit_1:upper_limit_1, 1)).^(-1))).^2, ...
        FIT_TYPE);
    [fit_result_2, ~] = fit(...
        base_line_x_to_electron_volts_zoomed(lower_limit_2:upper_limit_2, 1), ...
        (log((transmittance_nmin_zoomed(lower_limit_2:upper_limit_2, 1)...
            ./ base_line_y_zoomed(lower_limit_2:upper_limit_2, 1)).^(-1))).^2, ...
        FIT_TYPE);
    bandgap=-0.5*(fit_result_1.p2/fit_result_1.p1 + ...
        fit_result_2.p2/fit_result_2.p1);
    x_delta=fit_result_1.p2/fit_result_1.p1 - fit_result_2.p2/fit_result_2.p1;
    x=linspace(-(fit_result_1.p2/fit_result_1.p1)-x_delta, ...
               -(fit_result_2.p2/fit_result_2.p1)+x_delta, ...
               1000);
    y_1=(fit_result_1.p1).*x+(fit_result_1.p2);
    plot(x,y_1,'--')
    y_2=(fit_result_2.p1).*x+(fit_result_2.p2);
    plot(x,y_2,'--')
    xlabel('Energy(eV)', 'Interpreter', 'latex');
    ylabel('$(\alpha \hbar \omega)^2$', 'Interpreter', 'latex');
    title(['Band Gap:', num2str(bandgap), 'eV'], 'Interpreter', 'latex');
    hold off;
end